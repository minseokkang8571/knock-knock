<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.daou.knock.common.db.mybatis.mapper.CommentMapper">


    <select id="findAllByArticleIdx" parameterType="article" resultType="comment">
        SELECT cm.*,u.name, IFNULL(cml.comment_cnt,0) commentLikeCount, IF(ISNULL(cl.idx),false,true) likeYn
        FROM comment cm INNER JOIN user u ON cm.user_idx = u.idx
        LEFT OUTER JOIN (SELECT comment_idx, count(*) comment_cnt FROM commentLike WHERE 1=1 group by comment_idx) cml ON cm.idx = cml.comment_idx
        LEFT OUTER JOIN commentLike cl ON cl.comment_idx = cm.idx AND cl.user_idx=#{userIdx}
        WHERE cm.article_idx = #{idx}
        AND cm.del_yn = 'N'
        ORDER BY cm.origin_idx DESC, cm.group_ord ASC
        LIMIT #{firstIndex},#{pageSize}
    </select>
    <select id="countByDto" parameterType="article" resultType="int">
        SELECT count(*)
        FROM comment cm INNER JOIN user u ON cm.user_idx = u.idx
        WHERE cm.article_idx = #{idx}
        AND cm.del_yn = 'N'
    </select>

    <select id="maxGroupOrd" parameterType="comment" resultType="int">
        SELECT MAX(group_ord) FROM comment
        WHERE origin_idx = #{originIdx}
    </select>
    <update id="updateComment" parameterType="comment">
        UPDATE comment
        SET contents = #{contents}
        WHERE idx = #{idx}
    </update>

    <insert id="insertComment" parameterType="comment">
        INSERT
        INTO comment (
        user_idx
        , article_idx
        , contents
        <if test='groupLayer != "0"'>
        , origin_idx
        </if>
        , group_ord
        , group_layer
        )
        VALUES (
        #{userIdx}
        , #{articleIdx}
        , #{contents}
        <if test='groupLayer != "0"'>
        , #{originIdx}
        </if>
        , #{groupOrd}
        , #{groupLayer}
        )
        <selectKey keyProperty="originIdx" resultType="Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateOriginIdx" parameterType="comment">
        UPDATE comment
        SET origin_idx = #{originIdx}
        WHERE idx = #{originIdx}
    </update>

    <update id="updateDelYn" parameterType="Long">
        UPDATE comment
        SET del_yn = 'Y'
        WHERE (idx = #{idx} OR origin_idx=#{idx})
    </update>

    <insert id="insertCommentLike" parameterType="commentLike">
        INSERT
        INTO commentLike (
        user_idx
        , comment_idx
        )
        VALUES (
        #{userIdx}
        , #{commentIdx}
        )
    </insert>
    <delete id="deleteCommentLike" parameterType="commentLike">
        DELETE FROM commentLike
        WHERE  user_idx = #{userIdx}
        AND comment_idx = #{commentIdx}
    </delete>

    <select id="countByUserIdxAndCommentIdx" parameterType="commentLike" resultType="int">
        SELECT count(*) FROM commentLike
        WHERE user_idx = #{userIdx}
        AND comment_idx = #{commentIdx}
    </select>
</mapper>
